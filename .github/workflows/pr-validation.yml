name: PR Validation

on:
  pull_request:
    branches: [main]
    paths-ignore: 
      - 'docs/**'
      - '*.md'
      - 'specs/**'

env:
  PYTHON_VERSION: '3.11'

jobs:
  code-quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install development dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff mypy bandit safety

      - name: Run linting checks
        run: |
          ruff check .

      - name: Check code formatting
        run: |
          ruff format --check .

      - name: Run type checking
        run: |
          mypy src/ --ignore-missing-imports

      - name: Run security scanning
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          safety check --output json > safety-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-mock

      - name: Run unit tests
        run: |
          pytest tests/ -v --cov=src --cov-report=term-missing --cov-report=xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage.xml
          name: codecov-unit-tests

  status-check:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [code-quality, unit-tests]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.code-quality.result }}" != "success" ] || \
             [ "${{ needs.unit-tests.result }}" != "success" ]; then
            echo "❌ One or more checks failed"
            exit 1
          fi
          echo "✅ All validation checks passed"
